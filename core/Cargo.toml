[package]
name = "fluxmq"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
readme.workspace = true
keywords.workspace = true
categories.workspace = true
description.workspace = true

[features]
default = []
jemalloc = ["tikv-jemallocator"]
mimalloc = ["dep:mimalloc"]
ultra-performance = ["jemalloc"] # jemalloc is generally fastest for FluxMQ workloads

[[bin]]
name = "fluxmq"
path = "src/main.rs"

[dependencies]
# Async runtime
tokio = { workspace = true }
tokio-util = { workspace = true }
tokio-stream = { workspace = true }
futures = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }
bincode = "1.3"
bytes = { workspace = true }
memmap2.workspace = true
crc32fast.workspace = true

# Concurrency
crossbeam = { workspace = true }
parking_lot = { workspace = true }

# Low-level networking
socket2 = { workspace = true }
libc = "0.2.175"               # For sendfile/splice system calls

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Logging and monitoring
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
metrics = { workspace = true }

# Configuration
config = { workspace = true }
clap = { workspace = true }

# Random number generation
rand = { workspace = true }

# CPU and memory optimization
num_cpus = "1.17.0"
crossbeam-channel = "0.5.15"

# TLS support
tokio-rustls = { workspace = true }
rustls = { workspace = true }
rustls-pemfile = { workspace = true }

# Configuration
toml = { workspace = true }
dashmap.workspace = true

# Time utilities for examples
chrono = { workspace = true }

# Compression support
lz4_flex = "0.11.5"
snap = "1.1.1"
flate2 = "1.1.2"
zstd = "0.13.3"

# Http
atomic_http = "0.6.3"

# High-performance global allocators (optional features)
tikv-jemallocator = { version = "0.6", optional = true }
mimalloc = { version = "0.1", optional = true, default-features = false }

[dev-dependencies]
tokio-test = { workspace = true }
criterion = { workspace = true }
tempfile = { workspace = true }

# Platform-specific dependencies
[target.'cfg(target_os = "linux")'.dependencies]
io-uring = "0.6" # Linux io_uring for kernel bypass networking

[target.'cfg(target_os = "macos")'.dependencies]
mach = "0.3" # macOS Mach kernel interfaces for thread policies

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3", features = ["processthreadsapi", "handleapi"] } # Windows API for thread affinity
