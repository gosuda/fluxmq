name: 🚀 FluxMQ Simple Release

on:
  push:
    tags: ['v*.*.*']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            name: fluxmq-linux-x64

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: fluxmq-windows-x64.exe

          - os: macos-latest
            target: x86_64-apple-darwin
            name: fluxmq-macos-x64

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🦀 Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: ⚡ Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: core

      - name: 🏗️ Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
        working-directory: core

      - name: 📦 Package
        shell: bash
        run: |
          cd core
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            cp target/${{ matrix.target }}/release/fluxmq.exe ../${{ matrix.name }}
          else
            cp target/${{ matrix.target }}/release/fluxmq ../${{ matrix.name }}
            chmod +x ../${{ matrix.name }}
          fi

      - name: 📄 Generate checksum
        shell: bash
        run: |
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum ${{ matrix.name }} > ${{ matrix.name }}.sha256
          else
            shasum -a 256 ${{ matrix.name }} > ${{ matrix.name }}.sha256
          fi

      - name: 🎉 Upload to release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.name }}
            ${{ matrix.name }}.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}